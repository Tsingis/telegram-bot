name: lambda
on:
  push:
    branches:
      - test
      - prod
    paths:
      - "src/**"
      - "static/**"
      - "package*.json"
      - "serverless.yml"
      - ".github/workflows/lambda.yml"
  pull_request:
    branches:
      - test
    paths:
      - "src/**"
      - "static/**"
      - "package*.json"
      - "serverless.yml"
      - ".github/workflows/lambda.yml"
  workflow_dispatch:
jobs:
  lambda:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["22"]
    env:
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      CSE_ID: ${{ secrets.CSE_ID }}
      GOOGLE_API: ${{ secrets.GOOGLE_API }}
      OPENWEATHER_API: ${{ secrets.OPENWEATHER_API }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Package test
        if: ${{ github.ref == 'refs/heads/test' || github.event.pull_request.base.ref == 'test'}}
        run: npm run package -- --stage test
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN_TEST }}
      - name: Package prod
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/prod'}}
        run: npm run package -- --stage prod
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN_PROD }}
      - name: Deploy test
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/test'}}
        run: npm run deploy -- --package .serverless --stage test
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN_TEST }}
      - name: Deploy prod
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/prod'}}
        run: npm run deploy -- --package .serverless --stage prod
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN_PROD }}
